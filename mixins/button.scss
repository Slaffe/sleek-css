// Button colors on hover
@mixin button-color-hover ($color, $opacity: 1) {
	// Store the base color of this button
	$base-color: $color;

	// If two colors are specified
	@if (length($color) > 1) {
		$base-color: nth($color, 2); // Use the second one as the "base"

		background: linear-gradient(nth($color, 1), nth($color, 2));
	}
	// Solid background
	@else {
		background: lighten($base-color, 5%);
	}

	// Invert text color if button too bright
	@if (lightness($base-color) > 90) {
		color: $button-text-color-dark;
	}

	@if ($button-shadow) {
		box-shadow: 0 50px 80px -40px lighten($base-color, 10%), 0 25px 25px -20px lighten($base-color, 10%);
	}
	@else {
		box-shadow: none;
	}
}

// Button colors and shadows etc
@mixin button-color ($color, $opacity: 1) {
	// Store the base color of this button
	$base-color: $color;

	// If two colors are specified
	@if (length($color) > 1) {
		$base-color: nth($color, 2); // Use the second one as the "base"

		background: linear-gradient(nth($color, 1), nth($color, 2));
	}
	// Solid background
	@else {
		background: $base-color;
	}

	// Invert text color if button too bright
	@if (lightness($base-color) > 90) {
		color: $button-text-color-dark;
	}

	// Text shadow?
	@if ($button-text-shadow) {
		text-shadow: -1px -1px 0 darken($base-color, 10%);
	}
	@else {
		text-shadow: none;
	}

	// Box shadow?
	@if ($button-shadow == both) {
		box-shadow: 0 50px 80px -40px lighten($base-color, 10%), 0 25px 25px -20px lighten($base-color, 10%);
	}
	@else {
		box-shadow: none;
	}
}

// The actual button mixin (padding etc)
@mixin button ($color: $button-color) {
	@include button-color($color);

	// Hello
	display: inline-block;
	vertical-align: middle;
	transition: all $transition-default $transition-easing;

	// Size
	box-sizing: border-box;
	padding: $button-padding-vertical $button-padding-horizontal;

	// Font styling
	font-size: $button-font-size;
	font-weight: $button-font-weight;
	font-style: $button-font-style;

	line-height: $button-line-height;
	color: $color-white;

	text-transform: $button-text-transform;
	text-decoration: none;
	text-align: center;

	@if ($button-font-family) {
		font-family: $button-font-family;
	}
	@if ($button-letter-spacing) {
		letter-spacing: $button-letter-spacing;
	}

	// Border and radius
	border: 0; // Buttons should never have borders in 2018 / Bane

	@if ($button-border-radius) {
		border-radius: $button-border-radius;
	}
	@else {
		border-radius: 0;
	}

	// Make sure text color doesn't change on hover
	&:hover {
		@include button-color-hover($color);

		color: $button-text-color;
		text-decoration: none;
	}

	// Potential link _inside_ a button (span.button > a)
	a,
	a:hover {
		color: $button-text-color;
		text-decoration: none;
	}
}

// Turn a @button into a ghost button
@mixin button-ghost ($color: $button-color) {
	// Store the base color
	$base-color: $color;

	// If more than one color is specified - use the second one as the "base"
	@if (length($color) > 1) {
		$base-color: nth($color, 2);
	}

	// No background or shadow on ghosts
	background: transparent none;
	text-shadow: none;
	box-shadow: 0 0 0 rgba(0, 0, 0, 0);

	// Text color should be same as background was
	color: $base-color;

	// Border
	border: $button-border-width $button-border-style $base-color;

	// Reduce ghost button's padding so that they are exactly the same as normal buttons (that lack borders)
	@if ($button-border-width) {
		padding: calc(#{$button-padding-vertical} - #{$button-border-width}) calc(#{$button-padding-horizontal} - #{$button-border-width});
	}

	&:hover {
		@include button-color-hover($color);
	}
}
