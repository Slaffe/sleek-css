/**
 * @col
 *
 * FLoats elements into columns
 *
 * @param	int		$num: how many columns
 * @param	unit	$gutter: space between columns
 * @param	string	$selector: child-selector
 */
@mixin cols ($num: 3, $gutter: $gutter-default, $selector: '*') {
	@include clearfix;

	clear: both; // Probably desirable

	> #{$selector} {
		@include col($num, $gutter);
	}

	// Make sure first element in row clears previous row
	> #{$selector}:nth-child(#{$num}n) + * {
		clear: both;
	}

	// Make sure all elements except first clear none
	> #{$selector}:not(:nth-child(#{$num}n)) + * {
		clear: none;
	}
}

/**
 * @col
 *
 * A single column
 *
 * @param	int		$num: how many items per row
 * @param	unit	$gutter: space between cols
 */
@mixin col ($num: 3, $gutter: $gutter-default) {
	@include clearfix;

	// Duh :P
	float: left;

	// Calculate total gutter and gutter between each col
	$total-gutter: $gutter * ($num - 1);
	$width-subtract: $total-gutter / $num;

	box-sizing: border-box;
	width: calc(#{(100% / $num)} - #{$width-subtract});
	margin-right: $gutter;

	// Fix IE's rounding of percentage :/
	width: calc(#{(99% / $num)} - #{$width-subtract})\9;

	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		width: calc(#{(99% / $num)} - #{$width-subtract});
	}

	// Margin right for all but last element in row
	&:not(:nth-child(#{$num}n)) {
		margin-right: $gutter;
	}

	// No margin right for last element in row
	&:nth-child(#{$num}n) {
		margin-right: 0;
	}
}
