@mixin flex-grid ($num: 3, $gutter: $gutter-default) {
	clear: both;

	display: flex;
	align-items: stretch;
	justify-content: space-between;
	flex-wrap: wrap;

	> * {
		@include flex-grid-item($num, $gutter);
	}
}

@mixin flex-grid-item ($num: 3, $gutter: $gutter-default) {
	$total-gutter: $gutter * ($num - 1);
	$width-subtract: $total-gutter / $num;

	max-width: calc(#{(100% / $num)} - #{$width-subtract});
	flex: 0 0 calc(#{(100% / $num)} - #{$width-subtract});

	margin-bottom: $gutter;
}

.flex,
[class^="flex--"],
[class*="flex--"] {
	clear: both;
}

ul.flex,
ul[class^="flex--"],
ul[class*="flex--"] {
	margin-left: 0;
	padding-left: 0;
	list-style: none;
}

// Create flex--X classes for all specified column counts
@each $num in $col-nums {
	.flex--#{nth($num, 1)} {
		@include flex-grid(nth($num, 2), $gutter-default);
	}
}

// Create flex--X--bp-Y classes for all specified column counts and breakpoints
@each $bp in $col-breakpoints {
	@each $num in $col-nums {
		@media #{nth($bp, 2)} {
			.flex--#{nth($num, 1)}--#{nth($bp, 1)} {
				@include flex-grid(nth($num, 2), $gutter-default);
			}
		}
	}
}
