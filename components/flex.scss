/***
    title: Flex
    section: Grid
    description: Use to align elements in rows and columns. Perfect for use on ul/li setups or indeed any parent/child markup. Use bp--modifiers to set number of columns in different widths. Customize gutter and breakpoints in config file. You can also use ul {@include flex-grid(3)}.
    example:
        <ul class="flex--2--bp-tablet flex--3--bp-laptop">
            <li><img src="http://placehold.it/320x240" class="img--wide"> I'm two columns</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> In low resolution</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> But three columns</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> In high</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> Resolutions</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> Cool?</li>
        </ul>
***/
// Remove potential list style and margin
// in case flex--* is used on an unordered list
ul[class*="flex--"] {
	margin-left: 0;
	padding-left: 0;
	list-style: none;
}

// Make sure flex items have margin bottom(?)
[class*="flex--"] {
	> * {
		margin-bottom: $gutter-default;
	}
}

// Create flex--X classes for all specified column counts
@each $num-name, $num in $col-nums {
	.flex--#{$num-name} {
		@include flex-grid($num, $gutter-default);
	}
}

// Create flex--X--bp-Y classes for all specified column counts and breakpoints
@each $bp-name, $bp in $col-breakpoints {
	@each $num-name, $num in $col-nums {
		@media #{$bp} {
			.flex--#{$num-name}--#{$bp-name} {
				@include flex-grid($num, $gutter-default);
			}
		}
	}
}
